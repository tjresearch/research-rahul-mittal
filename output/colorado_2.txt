sentence = "question: we will show that both sides of the equation count the number of ways to choose a subset of size $k$ from a set $s$ of size $n$"
unusedWords = 5 / 29
intent = ParsedIntent(
    intent=Show(
        statement=ParsedStatement(
            statement=And(
                statement1=Equals(
                    q1=SideOfEquation(
                        side=LEFT
                    ),
                    q2=ParsedQuantity(
                        quantity=Amount(
                            obj=ParsedMathObject(
                                mathObject=ChoiceFrom(
                                    of=ParsedMathObject(
                                        mathObject=OfSize(
                                            obj=ParsedMathObject(
                                                mathObject=ArbitraryMathObject(
                                                    noun=subset
                                                ),
                                                context=ParseContext(
                                                    from=18,
                                                    to=19
                                                )
                                            ),
                                            size=ParsedQuantity(
                                                quantity=Variable(
                                                    name=k
                                                ),
                                                context=ParseContext(
                                                    from=21,
                                                    to=22
                                                )
                                            )
                                        ),
                                        context=ParseContext(
                                            from=17,
                                            to=22
                                        )
                                    ),
                                    from=ParsedMathObject(
                                        mathObject=OfSize(
                                            obj=ParsedMathObject(
                                                mathObject=ObjectVariable(
                                                    name=s
                                                ),
                                                context=ParseContext(
                                                    from=25,
                                                    to=26
                                                )
                                            ),
                                            size=ParsedQuantity(
                                                quantity=Variable(
                                                    name=n
                                                ),
                                                context=ParseContext(
                                                    from=28,
                                                    to=29
                                                )
                                            )
                                        ),
                                        context=ParseContext(
                                            from=23,
                                            to=29
                                        )
                                    )
                                ),
                                context=ParseContext(
                                    from=14,
                                    to=29
                                )
                            )
                        ),
                        context=ParseContext(
                            from=11,
                            to=29
                        )
                    )
                ),
                statement2=Equals(
                    q1=SideOfEquation(
                        side=RIGHT
                    ),
                    q2=ParsedQuantity(
                        quantity=Amount(
                            obj=ParsedMathObject(
                                mathObject=ChoiceFrom(
                                    of=ParsedMathObject(
                                        mathObject=OfSize(
                                            obj=ParsedMathObject(
                                                mathObject=ArbitraryMathObject(
                                                    noun=subset
                                                ),
                                                context=ParseContext(
                                                    from=18,
                                                    to=19
                                                )
                                            ),
                                            size=ParsedQuantity(
                                                quantity=Variable(
                                                    name=k
                                                ),
                                                context=ParseContext(
                                                    from=21,
                                                    to=22
                                                )
                                            )
                                        ),
                                        context=ParseContext(
                                            from=17,
                                            to=22
                                        )
                                    ),
                                    from=ParsedMathObject(
                                        mathObject=OfSize(
                                            obj=ParsedMathObject(
                                                mathObject=ObjectVariable(
                                                    name=s
                                                ),
                                                context=ParseContext(
                                                    from=25,
                                                    to=26
                                                )
                                            ),
                                            size=ParsedQuantity(
                                                quantity=Variable(
                                                    name=n
                                                ),
                                                context=ParseContext(
                                                    from=28,
                                                    to=29
                                                )
                                            )
                                        ),
                                        context=ParseContext(
                                            from=23,
                                            to=29
                                        )
                                    )
                                ),
                                context=ParseContext(
                                    from=14,
                                    to=29
                                )
                            )
                        ),
                        context=ParseContext(
                            from=11,
                            to=29
                        )
                    )
                )
            ),
            context=ParseContext(
                from=5,
                to=29
            )
        )
    ),
    context=ParseContext(
        from=1,
        to=29
    )
)

sentence = "left: the left hand side of the equation counts this by definition"
unusedWords = 7 / 12
statement = ParsedStatement(
    statement=Equals(
        q1=ParsedQuantity(
            quantity=SideOfEquation(
                side=LEFT
            ),
            context=ParseContext(
                from=2,
                to=5
            )
        ),
        q2=ParsedQuantity(
            quantity=HangingAmount(
                unit=kotlin.Unit
            ),
            context=ParseContext(
                from=9,
                to=10
            )
        )
    ),
    context=ParseContext(
        from=2,
        to=10
    )
)

sentence = "right: let $s$ be a fixed element"
unusedWords = 3 / 7
statement = ParsedStatement(
    statement=DefineMathObject(
        defined=ParsedMathObject(
            mathObject=ObjectVariable(
                name=s
            ),
            context=ParseContext(
                from=2,
                to=3
            )
        ),
        target=ParsedMathObject(
            mathObject=ArbitraryMathObject(
                noun=element
            ),
            context=ParseContext(
                from=6,
                to=7
            )
        )
    ),
    context=ParseContext(
        from=1,
        to=7
    )
)

sentence = "we will show that the right hand side counts the desired quantity by conditioning on whether $s$ is in the subset"
unusedWords = 11 / 21
intent = ParsedIntent(
    intent=Show(
        statement=ParsedStatement(
            statement=Equals(
                q1=ParsedQuantity(
                    quantity=SideOfEquation(
                        side=RIGHT
                    ),
                    context=ParseContext(
                        from=4,
                        to=8
                    )
                ),
                q2=ParsedQuantity(
                    quantity=HangingAmount(
                        unit=kotlin.Unit
                    ),
                    context=ParseContext(
                        from=9,
                        to=12
                    )
                )
            ),
            context=ParseContext(
                from=4,
                to=12
            )
        )
    ),
    context=ParseContext(
        from=0,
        to=12
    )
)

sentence = "first, we will count how many subsets of size $k$ include $s$"
unusedWords = 1 / 12
intent = ParsedIntent(
    intent=Determine(
        quantity=ParsedQuantity(
            quantity=Amount(
                obj=SubjectToCondition(
                    obj=ParsedMathObject(
                        mathObject=OfSize(
                            obj=ParsedMathObject(
                                mathObject=ArbitraryMathObject(
                                    noun=subsets
                                ),
                                context=ParseContext(
                                    from=6,
                                    to=7
                                )
                            ),
                            size=ParsedQuantity(
                                quantity=Variable(
                                    name=k
                                ),
                                context=ParseContext(
                                    from=9,
                                    to=10
                                )
                            )
                        ),
                        context=ParseContext(
                            from=6,
                            to=10
                        )
                    ),
                    condition=Function1<us.tlatoani.comboprover.MathObject,
                    us.tlatoani.comboprover.Contains>
                )
            ),
            context=ParseContext(
                from=4,
                to=12
            )
        )
    ),
    context=ParseContext(
        from=1,
        to=12
    )
)

sentence = "since such a subset includes $s$, there are $k - 1$ other elements in the subset, which must be chosen from the remaining $n - 1$ elements of $s$"
unusedWords = 10 / 25
statement = ParsedStatement(
    statement=Since(
        reason=ParsedStatement(
            statement=Contains(
                container=ParsedMathObject(
                    mathObject=ArbitraryMathObject(
                        noun=subset
                    ),
                    context=ParseContext(
                        from=3,
                        to=4
                    )
                ),
                elem=ParsedMathObject(
                    mathObject=Multiple(
                        amount=ParsedQuantity(
                            quantity=Variable(
                                name=s
                            ),
                            context=ParseContext(
                                from=5,
                                to=6
                            )
                        ),
                        obj=ParsedMathObject(
                            mathObject=Multiple(
                                amount=ParsedQuantity(
                                    quantity=Difference(
                                        left=Variable(
                                            name=k
                                        ),
                                        right=Constant(
                                            k=1
                                        )
                                    ),
                                    context=ParseContext(
                                        from=8,
                                        to=9
                                    )
                                ),
                                obj=ParsedMathObject(
                                    mathObject=ArbitraryMathObject(
                                        noun=elements
                                    ),
                                    context=ParseContext(
                                        from=10,
                                        to=11
                                    )
                                )
                            ),
                            context=ParseContext(
                                from=6,
                                to=11
                            )
                        )
                    ),
                    context=ParseContext(
                        from=5,
                        to=11
                    )
                )
            ),
            context=ParseContext(
                from=1,
                to=11
            )
        ),
        conclusion=ParsedStatement(
            statement=Contains(
                container=ParsedMathObject(
                    mathObject=RemainingElements(
                        of=ParsedMathObject(
                            mathObject=ObjectVariable(
                                name=s
                            ),
                            context=ParseContext(
                                from=24,
                                to=25
                            )
                        )
                    ),
                    context=ParseContext(
                        from=19,
                        to=25
                    )
                ),
                elem=ParsedMathObject(
                    mathObject=ArbitraryMathObject(
                        noun=subset
                    ),
                    context=ParseContext(
                        from=13,
                        to=14
                    )
                )
            ),
            context=ParseContext(
                from=11,
                to=25
            )
        )
    ),
    context=ParseContext(
        from=0,
        to=25
    )
)

sentence = "therefore there are 􏰀$(n - 1) >> (k - 1)$ such subsets"
unusedWords = 2 / 6
statement = ParsedStatement(
    statement=Equals(
        q1=Amount(
            obj=ParsedMathObject(
                mathObject=ArbitraryMathObject(
                    noun=subsets
                ),
                context=ParseContext(
                    from=5,
                    to=6
                )
            )
        ),
        q2=ParsedQuantity(
            quantity=Combination(
                n=Difference(
                    left=Variable(
                        name=n
                    ),
                    right=Constant(
                        k=1
                    )
                ),
                k=Difference(
                    left=Variable(
                        name=k
                    ),
                    right=Constant(
                        k=1
                    )
                )
            ),
            context=ParseContext(
                from=3,
                to=4
            )
        )
    ),
    context=ParseContext(
        from=1,
        to=6
    )
)

sentence = "second, we will count how many subsets of size $k$ do not include $s$"
unusedWords = 1 / 14
intent = ParsedIntent(
    intent=Determine(
        quantity=ParsedQuantity(
            quantity=Amount(
                obj=SubjectToCondition(
                    obj=ParsedMathObject(
                        mathObject=OfSize(
                            obj=ParsedMathObject(
                                mathObject=ArbitraryMathObject(
                                    noun=subsets
                                ),
                                context=ParseContext(
                                    from=6,
                                    to=7
                                )
                            ),
                            size=ParsedQuantity(
                                quantity=Variable(
                                    name=k
                                ),
                                context=ParseContext(
                                    from=9,
                                    to=10
                                )
                            )
                        ),
                        context=ParseContext(
                            from=6,
                            to=10
                        )
                    ),
                    condition=Function1<us.tlatoani.comboprover.MathObject,
                    us.tlatoani.comboprover.Not>
                )
            ),
            context=ParseContext(
                from=4,
                to=14
            )
        )
    ),
    context=ParseContext(
        from=1,
        to=14
    )
)

sentence = "since the subset does not include $s$, all of its $k$ elements are chosen from the remaining $n - 1$ elements of $s$"
unusedWords = 18 / 21
statement = ParsedStatement(
    statement=Equals(
        q1=ParsedQuantity(
            quantity=Variable(
                name=k
            ),
            context=ParseContext(
                from=10,
                to=11
            )
        ),
        q2=ParsedQuantity(
            quantity=Difference(
                left=Variable(
                    name=n
                ),
                right=Constant(
                    k=1
                )
            ),
            context=ParseContext(
                from=17,
                to=18
            )
        )
    ),
    context=ParseContext(
        from=10,
        to=18
    )
)

sentence = "therefore there are $(n - 1) >> k$ such subsets"
unusedWords = 2 / 6
statement = ParsedStatement(
    statement=Equals(
        q1=Amount(
            obj=ParsedMathObject(
                mathObject=ArbitraryMathObject(
                    noun=subsets
                ),
                context=ParseContext(
                    from=5,
                    to=6
                )
            )
        ),
        q2=ParsedQuantity(
            quantity=Combination(
                n=Difference(
                    left=Variable(
                        name=n
                    ),
                    right=Constant(
                        k=1
                    )
                ),
                k=Variable(
                    name=k
                )
            ),
            context=ParseContext(
                from=3,
                to=4
            )
        )
    ),
    context=ParseContext(
        from=1,
        to=6
    )
)

sentence = "since any subset of size $k$ either includes $s$ or does not (but not both), the total number of subsets is the sum of the counts in the two cases"
unusedWords = 22 / 30
statement = ParsedStatement(
    statement=Contains(
        container=ParsedMathObject(
            mathObject=OfSize(
                obj=ParsedMathObject(
                    mathObject=ArbitraryMathObject(
                        noun=subset
                    ),
                    context=ParseContext(
                        from=2,
                        to=3
                    )
                ),
                size=ParsedQuantity(
                    quantity=Variable(
                        name=k
                    ),
                    context=ParseContext(
                        from=5,
                        to=6
                    )
                )
            ),
            context=ParseContext(
                from=2,
                to=6
            )
        ),
        elem=ParsedMathObject(
            mathObject=Multiple(
                amount=ParsedQuantity(
                    quantity=Variable(
                        name=s
                    ),
                    context=ParseContext(
                        from=8,
                        to=9
                    )
                ),
                obj=Element(
                    of=ParsedMathObject(
                        mathObject=ArbitraryMathObject(
                            noun=subsets
                        ),
                        context=ParseContext(
                            from=19,
                            to=20
                        )
                    )
                )
            ),
            context=ParseContext(
                from=8,
                to=20
            )
        )
    ),
    context=ParseContext(
        from=2,
        to=20
    )
)

