sentence = "question: we will show that both sides of the equation count the number of ways to choose a committee of $k$ students from a student body of $n$ students, where, in addition, a subcomittee of $m$ of the $k$ students form the executive committee"
unusedWords = 20 / 44
intent = ParsedIntent(
    intent=Show(
        statement=ParsedStatement(
            statement=And(
                statement1=Equals(
                    q1=SideOfEquation(
                        side=LEFT
                    ),
                    q2=ParsedQuantity(
                        quantity=Amount(
                            obj=ParsedMathObject(
                                mathObject=ChoiceFrom(
                                    of=ParsedMathObject(
                                        mathObject=Multiple(
                                            amount=ParsedQuantity(
                                                quantity=Variable(
                                                    name=k
                                                ),
                                                parallel=Variable(
                                                    name=k
                                                ),
                                                context=ParseContext(
                                                    from=20,
                                                    to=21,
                                                    text=[b]
                                                )
                                            ),
                                            obj=ParsedMathObject(
                                                mathObject=ArbitraryMathObject(
                                                    noun=students
                                                ),
                                                parallel=ArbitraryMathObject(
                                                    noun=students
                                                ),
                                                context=ParseContext(
                                                    from=21,
                                                    to=22,
                                                    text=[students]
                                                )
                                            )
                                        ),
                                        parallel=Multiple(
                                            amount=Variable(
                                                name=k
                                            ),
                                            obj=ArbitraryMathObject(
                                                noun=students
                                            )
                                        ),
                                        context=ParseContext(
                                            from=17,
                                            to=22,
                                            text=[a,
                                            committee,
                                            of,
                                            b,
                                            students]
                                        )
                                    ),
                                    from=ParsedMathObject(
                                        mathObject=Multiple(
                                            amount=ParsedQuantity(
                                                quantity=Variable(
                                                    name=n
                                                ),
                                                parallel=Variable(
                                                    name=n
                                                ),
                                                context=ParseContext(
                                                    from=27,
                                                    to=28,
                                                    text=[c]
                                                )
                                            ),
                                            obj=Element(
                                                of=ParsedMathObject(
                                                    mathObject=Multiple(
                                                        amount=ParsedQuantity(
                                                            quantity=Variable(
                                                                name=m
                                                            ),
                                                            parallel=Variable(
                                                                name=m
                                                            ),
                                                            context=ParseContext(
                                                                from=35,
                                                                to=36,
                                                                text=[d]
                                                            )
                                                        ),
                                                        obj=Element(
                                                            of=ParsedMathObject(
                                                                mathObject=Multiple(
                                                                    amount=ParsedQuantity(
                                                                        quantity=Variable(
                                                                            name=k
                                                                        ),
                                                                        parallel=Variable(
                                                                            name=k
                                                                        ),
                                                                        context=ParseContext(
                                                                            from=38,
                                                                            to=39,
                                                                            text=[e]
                                                                        )
                                                                    ),
                                                                    obj=ParsedMathObject(
                                                                        mathObject=ArbitraryMathObject(
                                                                            noun=students
                                                                        ),
                                                                        parallel=ArbitraryMathObject(
                                                                            noun=students
                                                                        ),
                                                                        context=ParseContext(
                                                                            from=39,
                                                                            to=40,
                                                                            text=[students]
                                                                        )
                                                                    )
                                                                ),
                                                                parallel=Multiple(
                                                                    amount=Variable(
                                                                        name=k
                                                                    ),
                                                                    obj=ArbitraryMathObject(
                                                                        noun=students
                                                                    )
                                                                ),
                                                                context=ParseContext(
                                                                    from=37,
                                                                    to=40,
                                                                    text=[the,
                                                                    e,
                                                                    students]
                                                                )
                                                            )
                                                        )
                                                    ),
                                                    parallel=Multiple(
                                                        amount=Variable(
                                                            name=m
                                                        ),
                                                        obj=Element(
                                                            of=Multiple(
                                                                amount=Variable(
                                                                    name=k
                                                                ),
                                                                obj=ArbitraryMathObject(
                                                                    noun=students
                                                                )
                                                            )
                                                        )
                                                    ),
                                                    context=ParseContext(
                                                        from=35,
                                                        to=40,
                                                        text=[d,
                                                        of,
                                                        the,
                                                        e,
                                                        students]
                                                    )
                                                )
                                            )
                                        ),
                                        parallel=Multiple(
                                            amount=Variable(
                                                name=n
                                            ),
                                            obj=Element(
                                                of=Multiple(
                                                    amount=Variable(
                                                        name=m
                                                    ),
                                                    obj=Element(
                                                        of=Multiple(
                                                            amount=Variable(
                                                                name=k
                                                            ),
                                                            obj=ArbitraryMathObject(
                                                                noun=students
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        ),
                                        context=ParseContext(
                                            from=23,
                                            to=40,
                                            text=[a,
                                            student,
                                            body,
                                            of,
                                            c,
                                            students,
                                            where,
                                            in,
                                            addition,
                                            a,
                                            subcomittee,
                                            of,
                                            d,
                                            of,
                                            the,
                                            e,
                                            students]
                                        )
                                    )
                                ),
                                parallel=ChoiceFrom(
                                    of=Multiple(
                                        amount=Variable(
                                            name=k
                                        ),
                                        obj=ArbitraryMathObject(
                                            noun=students
                                        )
                                    ),
                                    from=Multiple(
                                        amount=Variable(
                                            name=n
                                        ),
                                        obj=Element(
                                            of=Multiple(
                                                amount=Variable(
                                                    name=m
                                                ),
                                                obj=Element(
                                                    of=Multiple(
                                                        amount=Variable(
                                                            name=k
                                                        ),
                                                        obj=ArbitraryMathObject(
                                                            noun=students
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ),
                                context=ParseContext(
                                    from=14,
                                    to=40,
                                    text=[ways,
                                    to,
                                    choose,
                                    a,
                                    committee,
                                    of,
                                    b,
                                    students,
                                    from,
                                    a,
                                    student,
                                    body,
                                    of,
                                    c,
                                    students,
                                    where,
                                    in,
                                    addition,
                                    a,
                                    subcomittee,
                                    of,
                                    d,
                                    of,
                                    the,
                                    e,
                                    students]
                                )
                            )
                        ),
                        parallel=Amount(
                            obj=ChoiceFrom(
                                of=Multiple(
                                    amount=Variable(
                                        name=k
                                    ),
                                    obj=ArbitraryMathObject(
                                        noun=students
                                    )
                                ),
                                from=Multiple(
                                    amount=Variable(
                                        name=n
                                    ),
                                    obj=Element(
                                        of=Multiple(
                                            amount=Variable(
                                                name=m
                                            ),
                                            obj=Element(
                                                of=Multiple(
                                                    amount=Variable(
                                                        name=k
                                                    ),
                                                    obj=ArbitraryMathObject(
                                                        noun=students
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        ),
                        context=ParseContext(
                            from=11,
                            to=40,
                            text=[the,
                            number,
                            of,
                            ways,
                            to,
                            choose,
                            a,
                            committee,
                            of,
                            b,
                            students,
                            from,
                            a,
                            student,
                            body,
                            of,
                            c,
                            students,
                            where,
                            in,
                            addition,
                            a,
                            subcomittee,
                            of,
                            d,
                            of,
                            the,
                            e,
                            students]
                        )
                    )
                ),
                statement2=Equals(
                    q1=SideOfEquation(
                        side=RIGHT
                    ),
                    q2=ParsedQuantity(
                        quantity=Amount(
                            obj=ParsedMathObject(
                                mathObject=ChoiceFrom(
                                    of=ParsedMathObject(
                                        mathObject=Multiple(
                                            amount=ParsedQuantity(
                                                quantity=Variable(
                                                    name=k
                                                ),
                                                parallel=Variable(
                                                    name=k
                                                ),
                                                context=ParseContext(
                                                    from=20,
                                                    to=21,
                                                    text=[b]
                                                )
                                            ),
                                            obj=ParsedMathObject(
                                                mathObject=ArbitraryMathObject(
                                                    noun=students
                                                ),
                                                parallel=ArbitraryMathObject(
                                                    noun=students
                                                ),
                                                context=ParseContext(
                                                    from=21,
                                                    to=22,
                                                    text=[students]
                                                )
                                            )
                                        ),
                                        parallel=Multiple(
                                            amount=Variable(
                                                name=k
                                            ),
                                            obj=ArbitraryMathObject(
                                                noun=students
                                            )
                                        ),
                                        context=ParseContext(
                                            from=17,
                                            to=22,
                                            text=[a,
                                            committee,
                                            of,
                                            b,
                                            students]
                                        )
                                    ),
                                    from=ParsedMathObject(
                                        mathObject=Multiple(
                                            amount=ParsedQuantity(
                                                quantity=Variable(
                                                    name=n
                                                ),
                                                parallel=Variable(
                                                    name=n
                                                ),
                                                context=ParseContext(
                                                    from=27,
                                                    to=28,
                                                    text=[c]
                                                )
                                            ),
                                            obj=Element(
                                                of=ParsedMathObject(
                                                    mathObject=Multiple(
                                                        amount=ParsedQuantity(
                                                            quantity=Variable(
                                                                name=m
                                                            ),
                                                            parallel=Variable(
                                                                name=m
                                                            ),
                                                            context=ParseContext(
                                                                from=35,
                                                                to=36,
                                                                text=[d]
                                                            )
                                                        ),
                                                        obj=Element(
                                                            of=ParsedMathObject(
                                                                mathObject=Multiple(
                                                                    amount=ParsedQuantity(
                                                                        quantity=Variable(
                                                                            name=k
                                                                        ),
                                                                        parallel=Variable(
                                                                            name=k
                                                                        ),
                                                                        context=ParseContext(
                                                                            from=38,
                                                                            to=39,
                                                                            text=[e]
                                                                        )
                                                                    ),
                                                                    obj=ParsedMathObject(
                                                                        mathObject=ArbitraryMathObject(
                                                                            noun=students
                                                                        ),
                                                                        parallel=ArbitraryMathObject(
                                                                            noun=students
                                                                        ),
                                                                        context=ParseContext(
                                                                            from=39,
                                                                            to=40,
                                                                            text=[students]
                                                                        )
                                                                    )
                                                                ),
                                                                parallel=Multiple(
                                                                    amount=Variable(
                                                                        name=k
                                                                    ),
                                                                    obj=ArbitraryMathObject(
                                                                        noun=students
                                                                    )
                                                                ),
                                                                context=ParseContext(
                                                                    from=37,
                                                                    to=40,
                                                                    text=[the,
                                                                    e,
                                                                    students]
                                                                )
                                                            )
                                                        )
                                                    ),
                                                    parallel=Multiple(
                                                        amount=Variable(
                                                            name=m
                                                        ),
                                                        obj=Element(
                                                            of=Multiple(
                                                                amount=Variable(
                                                                    name=k
                                                                ),
                                                                obj=ArbitraryMathObject(
                                                                    noun=students
                                                                )
                                                            )
                                                        )
                                                    ),
                                                    context=ParseContext(
                                                        from=35,
                                                        to=40,
                                                        text=[d,
                                                        of,
                                                        the,
                                                        e,
                                                        students]
                                                    )
                                                )
                                            )
                                        ),
                                        parallel=Multiple(
                                            amount=Variable(
                                                name=n
                                            ),
                                            obj=Element(
                                                of=Multiple(
                                                    amount=Variable(
                                                        name=m
                                                    ),
                                                    obj=Element(
                                                        of=Multiple(
                                                            amount=Variable(
                                                                name=k
                                                            ),
                                                            obj=ArbitraryMathObject(
                                                                noun=students
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        ),
                                        context=ParseContext(
                                            from=23,
                                            to=40,
                                            text=[a,
                                            student,
                                            body,
                                            of,
                                            c,
                                            students,
                                            where,
                                            in,
                                            addition,
                                            a,
                                            subcomittee,
                                            of,
                                            d,
                                            of,
                                            the,
                                            e,
                                            students]
                                        )
                                    )
                                ),
                                parallel=ChoiceFrom(
                                    of=Multiple(
                                        amount=Variable(
                                            name=k
                                        ),
                                        obj=ArbitraryMathObject(
                                            noun=students
                                        )
                                    ),
                                    from=Multiple(
                                        amount=Variable(
                                            name=n
                                        ),
                                        obj=Element(
                                            of=Multiple(
                                                amount=Variable(
                                                    name=m
                                                ),
                                                obj=Element(
                                                    of=Multiple(
                                                        amount=Variable(
                                                            name=k
                                                        ),
                                                        obj=ArbitraryMathObject(
                                                            noun=students
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ),
                                context=ParseContext(
                                    from=14,
                                    to=40,
                                    text=[ways,
                                    to,
                                    choose,
                                    a,
                                    committee,
                                    of,
                                    b,
                                    students,
                                    from,
                                    a,
                                    student,
                                    body,
                                    of,
                                    c,
                                    students,
                                    where,
                                    in,
                                    addition,
                                    a,
                                    subcomittee,
                                    of,
                                    d,
                                    of,
                                    the,
                                    e,
                                    students]
                                )
                            )
                        ),
                        parallel=Amount(
                            obj=ChoiceFrom(
                                of=Multiple(
                                    amount=Variable(
                                        name=k
                                    ),
                                    obj=ArbitraryMathObject(
                                        noun=students
                                    )
                                ),
                                from=Multiple(
                                    amount=Variable(
                                        name=n
                                    ),
                                    obj=Element(
                                        of=Multiple(
                                            amount=Variable(
                                                name=m
                                            ),
                                            obj=Element(
                                                of=Multiple(
                                                    amount=Variable(
                                                        name=k
                                                    ),
                                                    obj=ArbitraryMathObject(
                                                        noun=students
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        ),
                        context=ParseContext(
                            from=11,
                            to=40,
                            text=[the,
                            number,
                            of,
                            ways,
                            to,
                            choose,
                            a,
                            committee,
                            of,
                            b,
                            students,
                            from,
                            a,
                            student,
                            body,
                            of,
                            c,
                            students,
                            where,
                            in,
                            addition,
                            a,
                            subcomittee,
                            of,
                            d,
                            of,
                            the,
                            e,
                            students]
                        )
                    )
                )
            ),
            parallel=And(
                statement1=Equals(
                    q1=SideOfEquation(
                        side=LEFT
                    ),
                    q2=Amount(
                        obj=ChoiceFrom(
                            of=Multiple(
                                amount=Variable(
                                    name=k
                                ),
                                obj=ArbitraryMathObject(
                                    noun=students
                                )
                            ),
                            from=Multiple(
                                amount=Variable(
                                    name=n
                                ),
                                obj=Element(
                                    of=Multiple(
                                        amount=Variable(
                                            name=m
                                        ),
                                        obj=Element(
                                            of=Multiple(
                                                amount=Variable(
                                                    name=k
                                                ),
                                                obj=ArbitraryMathObject(
                                                    noun=students
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                ),
                statement2=Equals(
                    q1=SideOfEquation(
                        side=RIGHT
                    ),
                    q2=Amount(
                        obj=ChoiceFrom(
                            of=Multiple(
                                amount=Variable(
                                    name=k
                                ),
                                obj=ArbitraryMathObject(
                                    noun=students
                                )
                            ),
                            from=Multiple(
                                amount=Variable(
                                    name=n
                                ),
                                obj=Element(
                                    of=Multiple(
                                        amount=Variable(
                                            name=m
                                        ),
                                        obj=Element(
                                            of=Multiple(
                                                amount=Variable(
                                                    name=k
                                                ),
                                                obj=ArbitraryMathObject(
                                                    noun=students
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            ),
            context=ParseContext(
                from=5,
                to=40,
                text=[both,
                sides,
                of,
                the,
                equation,
                count,
                the,
                number,
                of,
                ways,
                to,
                choose,
                a,
                committee,
                of,
                b,
                students,
                from,
                a,
                student,
                body,
                of,
                c,
                students,
                where,
                in,
                addition,
                a,
                subcomittee,
                of,
                d,
                of,
                the,
                e,
                students]
            )
        )
    ),
    parallel=Show(
        statement=And(
            statement1=Equals(
                q1=SideOfEquation(
                    side=LEFT
                ),
                q2=Amount(
                    obj=ChoiceFrom(
                        of=Multiple(
                            amount=Variable(
                                name=k
                            ),
                            obj=ArbitraryMathObject(
                                noun=students
                            )
                        ),
                        from=Multiple(
                            amount=Variable(
                                name=n
                            ),
                            obj=Element(
                                of=Multiple(
                                    amount=Variable(
                                        name=m
                                    ),
                                    obj=Element(
                                        of=Multiple(
                                            amount=Variable(
                                                name=k
                                            ),
                                            obj=ArbitraryMathObject(
                                                noun=students
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            ),
            statement2=Equals(
                q1=SideOfEquation(
                    side=RIGHT
                ),
                q2=Amount(
                    obj=ChoiceFrom(
                        of=Multiple(
                            amount=Variable(
                                name=k
                            ),
                            obj=ArbitraryMathObject(
                                noun=students
                            )
                        ),
                        from=Multiple(
                            amount=Variable(
                                name=n
                            ),
                            obj=Element(
                                of=Multiple(
                                    amount=Variable(
                                        name=m
                                    ),
                                    obj=Element(
                                        of=Multiple(
                                            amount=Variable(
                                                name=k
                                            ),
                                            obj=ArbitraryMathObject(
                                                noun=students
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )
    ),
    context=ParseContext(
        from=1,
        to=40,
        text=[we,
        will,
        show,
        that,
        both,
        sides,
        of,
        the,
        equation,
        count,
        the,
        number,
        of,
        ways,
        to,
        choose,
        a,
        committee,
        of,
        b,
        students,
        from,
        a,
        student,
        body,
        of,
        c,
        students,
        where,
        in,
        addition,
        a,
        subcomittee,
        of,
        d,
        of,
        the,
        e,
        students]
    )
)

sentence = "left: we will describe the counting process"
Empty sentence

sentence = "first, we choose $k$ students from the student body of $n$ students, to form the committee"
unusedWords = 6 / 16
intent = ParsedIntent(
    intent=ChooseFor(
        choice=ChoiceFrom(
            of=ParsedMathObject(
                mathObject=Multiple(
                    amount=ParsedQuantity(
                        quantity=Variable(
                            name=k
                        ),
                        parallel=Variable(
                            name=k
                        ),
                        context=ParseContext(
                            from=3,
                            to=4,
                            text=[b]
                        )
                    ),
                    obj=ParsedMathObject(
                        mathObject=ArbitraryMathObject(
                            noun=students
                        ),
                        parallel=ArbitraryMathObject(
                            noun=students
                        ),
                        context=ParseContext(
                            from=4,
                            to=5,
                            text=[students]
                        )
                    )
                ),
                parallel=Multiple(
                    amount=Variable(
                        name=k
                    ),
                    obj=ArbitraryMathObject(
                        noun=students
                    )
                ),
                context=ParseContext(
                    from=3,
                    to=5,
                    text=[b,
                    students]
                )
            ),
            from=ParsedMathObject(
                mathObject=Multiple(
                    amount=ParsedQuantity(
                        quantity=Variable(
                            name=n
                        ),
                        parallel=Variable(
                            name=n
                        ),
                        context=ParseContext(
                            from=10,
                            to=11,
                            text=[c]
                        )
                    ),
                    obj=ParsedMathObject(
                        mathObject=ArbitraryMathObject(
                            noun=students
                        ),
                        parallel=ArbitraryMathObject(
                            noun=students
                        ),
                        context=ParseContext(
                            from=11,
                            to=12,
                            text=[students]
                        )
                    )
                ),
                parallel=Multiple(
                    amount=Variable(
                        name=n
                    ),
                    obj=ArbitraryMathObject(
                        noun=students
                    )
                ),
                context=ParseContext(
                    from=6,
                    to=12,
                    text=[the,
                    student,
                    body,
                    of,
                    c,
                    students]
                )
            )
        ),
        forObj=ParsedMathObject(
            mathObject=ArbitraryMathObject(
                noun=committee
            ),
            parallel=ArbitraryMathObject(
                noun=committee
            ),
            context=ParseContext(
                from=15,
                to=16,
                text=[committee]
            )
        )
    ),
    parallel=ChooseFor(
        choice=ChoiceFrom(
            of=Multiple(
                amount=Variable(
                    name=k
                ),
                obj=ArbitraryMathObject(
                    noun=students
                )
            ),
            from=Multiple(
                amount=Variable(
                    name=n
                ),
                obj=ArbitraryMathObject(
                    noun=students
                )
            )
        ),
        forObj=ArbitraryMathObject(
            noun=committee
        )
    ),
    context=ParseContext(
        from=1,
        to=16,
        text=[we,
        choose,
        b,
        students,
        from,
        the,
        student,
        body,
        of,
        c,
        students,
        to,
        form,
        the,
        committee]
    )
)

sentence = "there are $n >> k$ ways to do this"
unusedWords = 0 / 7
statement = ParsedStatement(
    statement=Equals(
        q1=Amount(
            obj=ParsedMathObject(
                mathObject=HangingWays(
                    unit=kotlin.Unit
                ),
                parallel=HangingWays(
                    unit=kotlin.Unit
                ),
                context=ParseContext(
                    from=3,
                    to=7,
                    text=[ways,
                    to,
                    do,
                    this]
                )
            )
        ),
        q2=ParsedQuantity(
            quantity=Combination(
                n=Variable(
                    name=n
                ),
                k=Variable(
                    name=k
                )
            ),
            parallel=Combination(
                n=Variable(
                    name=n
                ),
                k=Variable(
                    name=k
                )
            ),
            context=ParseContext(
                from=2,
                to=3,
                text=[b]
            )
        )
    ),
    parallel=Equals(
        q1=Amount(
            obj=HangingWays(
                unit=kotlin.Unit
            )
        ),
        q2=Combination(
            n=Variable(
                name=n
            ),
            k=Variable(
                name=k
            )
        )
    ),
    context=ParseContext(
        from=0,
        to=7,
        text=[there,
        are,
        b,
        ways,
        to,
        do,
        this]
    )
)

sentence = "then we choose $m$ students from among those $k$ to form the subcommittee"
unusedWords = 4 / 13
intent = ParsedIntent(
    intent=ChooseFor(
        choice=ChoiceFrom(
            of=ParsedMathObject(
                mathObject=Multiple(
                    amount=ParsedQuantity(
                        quantity=Variable(
                            name=m
                        ),
                        parallel=Variable(
                            name=m
                        ),
                        context=ParseContext(
                            from=3,
                            to=4,
                            text=[b]
                        )
                    ),
                    obj=ParsedMathObject(
                        mathObject=ArbitraryMathObject(
                            noun=students
                        ),
                        parallel=ArbitraryMathObject(
                            noun=students
                        ),
                        context=ParseContext(
                            from=4,
                            to=5,
                            text=[students]
                        )
                    )
                ),
                parallel=Multiple(
                    amount=Variable(
                        name=m
                    ),
                    obj=ArbitraryMathObject(
                        noun=students
                    )
                ),
                context=ParseContext(
                    from=3,
                    to=5,
                    text=[b,
                    students]
                )
            ),
            from=ParsedMathObject(
                mathObject=ObjectVariable(
                    name=k
                ),
                parallel=ObjectVariable(
                    name=k
                ),
                context=ParseContext(
                    from=8,
                    to=9,
                    text=[c]
                )
            )
        ),
        forObj=ParsedMathObject(
            mathObject=ArbitraryMathObject(
                noun=subcommittee
            ),
            parallel=ArbitraryMathObject(
                noun=subcommittee
            ),
            context=ParseContext(
                from=12,
                to=13,
                text=[subcommittee]
            )
        )
    ),
    parallel=ChooseFor(
        choice=ChoiceFrom(
            of=Multiple(
                amount=Variable(
                    name=m
                ),
                obj=ArbitraryMathObject(
                    noun=students
                )
            ),
            from=ObjectVariable(
                name=k
            )
        ),
        forObj=ArbitraryMathObject(
            noun=subcommittee
        )
    ),
    context=ParseContext(
        from=1,
        to=13,
        text=[we,
        choose,
        b,
        students,
        from,
        among,
        those,
        c,
        to,
        form,
        the,
        subcommittee]
    )
)

sentence = "there are 􏰀$k >> m$􏰁 ways to do this"
unusedWords = 0 / 7
statement = ParsedStatement(
    statement=Equals(
        q1=Amount(
            obj=ParsedMathObject(
                mathObject=HangingWays(
                    unit=kotlin.Unit
                ),
                parallel=HangingWays(
                    unit=kotlin.Unit
                ),
                context=ParseContext(
                    from=3,
                    to=7,
                    text=[ways,
                    to,
                    do,
                    this]
                )
            )
        ),
        q2=ParsedQuantity(
            quantity=Combination(
                n=Variable(
                    name=k
                ),
                k=Variable(
                    name=m
                )
            ),
            parallel=Combination(
                n=Variable(
                    name=k
                ),
                k=Variable(
                    name=m
                )
            ),
            context=ParseContext(
                from=2,
                to=3,
                text=[b]
            )
        )
    ),
    parallel=Equals(
        q1=Amount(
            obj=HangingWays(
                unit=kotlin.Unit
            )
        ),
        q2=Combination(
            n=Variable(
                name=k
            ),
            k=Variable(
                name=m
            )
        )
    ),
    context=ParseContext(
        from=0,
        to=7,
        text=[there,
        are,
        b,
        ways,
        to,
        do,
        this]
    )
)

sentence = "by the multiplication principle, the left hand side counts the desired quantity"
unusedWords = 3 / 12
statement = ParsedStatement(
    statement=By(
        concept=MULTIPLICATION_PRINCIPLE,
        conclusion=ParsedStatement(
            statement=Equals(
                q1=ParsedQuantity(
                    quantity=SideOfEquation(
                        side=LEFT
                    ),
                    parallel=SideOfEquation(
                        side=LEFT
                    ),
                    context=ParseContext(
                        from=4,
                        to=8,
                        text=[the,
                        left,
                        hand,
                        side]
                    )
                ),
                q2=ParsedQuantity(
                    quantity=HangingAmount(
                        unit=kotlin.Unit
                    ),
                    parallel=HangingAmount(
                        unit=kotlin.Unit
                    ),
                    context=ParseContext(
                        from=9,
                        to=12,
                        text=[the,
                        desired,
                        quantity]
                    )
                )
            ),
            parallel=Equals(
                q1=SideOfEquation(
                    side=LEFT
                ),
                q2=HangingAmount(
                    unit=kotlin.Unit
                )
            ),
            context=ParseContext(
                from=4,
                to=12,
                text=[the,
                left,
                hand,
                side,
                counts,
                the,
                desired,
                quantity]
            )
        )
    ),
    parallel=By(
        concept=MULTIPLICATION_PRINCIPLE,
        conclusion=Equals(
            q1=SideOfEquation(
                side=LEFT
            ),
            q2=HangingAmount(
                unit=kotlin.Unit
            )
        )
    ),
    context=ParseContext(
        from=0,
        to=12,
        text=[by,
        the,
        multiplication,
        principle,
        the,
        left,
        hand,
        side,
        counts,
        the,
        desired,
        quantity]
    )
)

sentence = "right: we will describe the counting process"
Empty sentence

sentence = "first, we choose $m$ students from the student body of $n$ students, to form the executive committee"
unusedWords = 7 / 17
intent = ParsedIntent(
    intent=ChooseFor(
        choice=ChoiceFrom(
            of=ParsedMathObject(
                mathObject=Multiple(
                    amount=ParsedQuantity(
                        quantity=Variable(
                            name=m
                        ),
                        parallel=Variable(
                            name=m
                        ),
                        context=ParseContext(
                            from=3,
                            to=4,
                            text=[b]
                        )
                    ),
                    obj=ParsedMathObject(
                        mathObject=ArbitraryMathObject(
                            noun=students
                        ),
                        parallel=ArbitraryMathObject(
                            noun=students
                        ),
                        context=ParseContext(
                            from=4,
                            to=5,
                            text=[students]
                        )
                    )
                ),
                parallel=Multiple(
                    amount=Variable(
                        name=m
                    ),
                    obj=ArbitraryMathObject(
                        noun=students
                    )
                ),
                context=ParseContext(
                    from=3,
                    to=5,
                    text=[b,
                    students]
                )
            ),
            from=ParsedMathObject(
                mathObject=Multiple(
                    amount=ParsedQuantity(
                        quantity=Variable(
                            name=n
                        ),
                        parallel=Variable(
                            name=n
                        ),
                        context=ParseContext(
                            from=10,
                            to=11,
                            text=[c]
                        )
                    ),
                    obj=ParsedMathObject(
                        mathObject=ArbitraryMathObject(
                            noun=students
                        ),
                        parallel=ArbitraryMathObject(
                            noun=students
                        ),
                        context=ParseContext(
                            from=11,
                            to=12,
                            text=[students]
                        )
                    )
                ),
                parallel=Multiple(
                    amount=Variable(
                        name=n
                    ),
                    obj=ArbitraryMathObject(
                        noun=students
                    )
                ),
                context=ParseContext(
                    from=6,
                    to=12,
                    text=[the,
                    student,
                    body,
                    of,
                    c,
                    students]
                )
            )
        ),
        forObj=ParsedMathObject(
            mathObject=ArbitraryMathObject(
                noun=committee
            ),
            parallel=ArbitraryMathObject(
                noun=committee
            ),
            context=ParseContext(
                from=16,
                to=17,
                text=[committee]
            )
        )
    ),
    parallel=ChooseFor(
        choice=ChoiceFrom(
            of=Multiple(
                amount=Variable(
                    name=m
                ),
                obj=ArbitraryMathObject(
                    noun=students
                )
            ),
            from=Multiple(
                amount=Variable(
                    name=n
                ),
                obj=ArbitraryMathObject(
                    noun=students
                )
            )
        ),
        forObj=ArbitraryMathObject(
            noun=committee
        )
    ),
    context=ParseContext(
        from=1,
        to=17,
        text=[we,
        choose,
        b,
        students,
        from,
        the,
        student,
        body,
        of,
        c,
        students,
        to,
        form,
        the,
        executive,
        committee]
    )
)

sentence = "there are 􏰀$n >> m$􏰁 ways to do this"
unusedWords = 0 / 7
statement = ParsedStatement(
    statement=Equals(
        q1=Amount(
            obj=ParsedMathObject(
                mathObject=HangingWays(
                    unit=kotlin.Unit
                ),
                parallel=HangingWays(
                    unit=kotlin.Unit
                ),
                context=ParseContext(
                    from=3,
                    to=7,
                    text=[ways,
                    to,
                    do,
                    this]
                )
            )
        ),
        q2=ParsedQuantity(
            quantity=Combination(
                n=Variable(
                    name=n
                ),
                k=Variable(
                    name=m
                )
            ),
            parallel=Combination(
                n=Variable(
                    name=n
                ),
                k=Variable(
                    name=m
                )
            ),
            context=ParseContext(
                from=2,
                to=3,
                text=[b]
            )
        )
    ),
    parallel=Equals(
        q1=Amount(
            obj=HangingWays(
                unit=kotlin.Unit
            )
        ),
        q2=Combination(
            n=Variable(
                name=n
            ),
            k=Variable(
                name=m
            )
        )
    ),
    context=ParseContext(
        from=0,
        to=7,
        text=[there,
        are,
        b,
        ways,
        to,
        do,
        this]
    )
)

sentence = "then we choose $k - m$ of the remaining portion of the student body (which consists of $n - m$ students), to form the non-executive part of the committee"
unusedWords = 11 / 25
intent = ParsedIntent(
    intent=ChooseFor(
        choice=Choice(
            noun=Multiple(
                amount=ParsedQuantity(
                    quantity=Difference(
                        left=Variable(
                            name=k
                        ),
                        right=Variable(
                            name=m
                        )
                    ),
                    parallel=Difference(
                        left=Variable(
                            name=k
                        ),
                        right=Variable(
                            name=m
                        )
                    ),
                    context=ParseContext(
                        from=3,
                        to=4,
                        text=[b]
                    )
                ),
                obj=ParsedMathObject(
                    mathObject=RemainingElements(
                        of=ParsedMathObject(
                            mathObject=Multiple(
                                amount=ParsedQuantity(
                                    quantity=Difference(
                                        left=Variable(
                                            name=n
                                        ),
                                        right=Variable(
                                            name=m
                                        )
                                    ),
                                    parallel=Difference(
                                        left=Variable(
                                            name=n
                                        ),
                                        right=Variable(
                                            name=m
                                        )
                                    ),
                                    context=ParseContext(
                                        from=15,
                                        to=16,
                                        text=[c]
                                    )
                                ),
                                obj=ParsedMathObject(
                                    mathObject=ArbitraryMathObject(
                                        noun=students
                                    ),
                                    parallel=ArbitraryMathObject(
                                        noun=students
                                    ),
                                    context=ParseContext(
                                        from=16,
                                        to=17,
                                        text=[students]
                                    )
                                )
                            ),
                            parallel=Multiple(
                                amount=Difference(
                                    left=Variable(
                                        name=n
                                    ),
                                    right=Variable(
                                        name=m
                                    )
                                ),
                                obj=ArbitraryMathObject(
                                    noun=students
                                )
                            ),
                            context=ParseContext(
                                from=9,
                                to=17,
                                text=[the,
                                student,
                                body,
                                which,
                                consists,
                                of,
                                c,
                                students]
                            )
                        )
                    ),
                    parallel=RemainingElements(
                        of=Multiple(
                            amount=Difference(
                                left=Variable(
                                    name=n
                                ),
                                right=Variable(
                                    name=m
                                )
                            ),
                            obj=ArbitraryMathObject(
                                noun=students
                            )
                        )
                    ),
                    context=ParseContext(
                        from=5,
                        to=17,
                        text=[the,
                        remaining,
                        portion,
                        of,
                        the,
                        student,
                        body,
                        which,
                        consists,
                        of,
                        c,
                        students]
                    )
                )
            )
        ),
        forObj=ParsedMathObject(
            mathObject=Part(
                of=ParsedMathObject(
                    mathObject=ArbitraryMathObject(
                        noun=committee
                    ),
                    parallel=ArbitraryMathObject(
                        noun=committee
                    ),
                    context=ParseContext(
                        from=24,
                        to=25,
                        text=[committee]
                    )
                )
            ),
            parallel=Part(
                of=ArbitraryMathObject(
                    noun=committee
                )
            ),
            context=ParseContext(
                from=19,
                to=25,
                text=[the,
                nonexecutive,
                part,
                of,
                the,
                committee]
            )
        )
    ),
    parallel=ChooseFor(
        choice=Choice(
            noun=Multiple(
                amount=Difference(
                    left=Variable(
                        name=k
                    ),
                    right=Variable(
                        name=m
                    )
                ),
                obj=RemainingElements(
                    of=Multiple(
                        amount=Difference(
                            left=Variable(
                                name=n
                            ),
                            right=Variable(
                                name=m
                            )
                        ),
                        obj=ArbitraryMathObject(
                            noun=students
                        )
                    )
                )
            )
        ),
        forObj=Part(
            of=ArbitraryMathObject(
                noun=committee
            )
        )
    ),
    context=ParseContext(
        from=1,
        to=25,
        text=[we,
        choose,
        b,
        of,
        the,
        remaining,
        portion,
        of,
        the,
        student,
        body,
        which,
        consists,
        of,
        c,
        students,
        to,
        form,
        the,
        nonexecutive,
        part,
        of,
        the,
        committee]
    )
)

sentence = "there are $(n - m) >> (k - m)$ ways to do this"
unusedWords = 0 / 7
statement = ParsedStatement(
    statement=Equals(
        q1=Amount(
            obj=ParsedMathObject(
                mathObject=HangingWays(
                    unit=kotlin.Unit
                ),
                parallel=HangingWays(
                    unit=kotlin.Unit
                ),
                context=ParseContext(
                    from=3,
                    to=7,
                    text=[ways,
                    to,
                    do,
                    this]
                )
            )
        ),
        q2=ParsedQuantity(
            quantity=Combination(
                n=Difference(
                    left=Variable(
                        name=n
                    ),
                    right=Variable(
                        name=m
                    )
                ),
                k=Difference(
                    left=Variable(
                        name=k
                    ),
                    right=Variable(
                        name=m
                    )
                )
            ),
            parallel=Combination(
                n=Difference(
                    left=Variable(
                        name=n
                    ),
                    right=Variable(
                        name=m
                    )
                ),
                k=Difference(
                    left=Variable(
                        name=k
                    ),
                    right=Variable(
                        name=m
                    )
                )
            ),
            context=ParseContext(
                from=2,
                to=3,
                text=[b]
            )
        )
    ),
    parallel=Equals(
        q1=Amount(
            obj=HangingWays(
                unit=kotlin.Unit
            )
        ),
        q2=Combination(
            n=Difference(
                left=Variable(
                    name=n
                ),
                right=Variable(
                    name=m
                )
            ),
            k=Difference(
                left=Variable(
                    name=k
                ),
                right=Variable(
                    name=m
                )
            )
        )
    ),
    context=ParseContext(
        from=0,
        to=7,
        text=[there,
        are,
        b,
        ways,
        to,
        do,
        this]
    )
)

sentence = "by the multiplication principle, the right hand side counts the desired quantity"
unusedWords = 3 / 12
statement = ParsedStatement(
    statement=By(
        concept=MULTIPLICATION_PRINCIPLE,
        conclusion=ParsedStatement(
            statement=Equals(
                q1=ParsedQuantity(
                    quantity=SideOfEquation(
                        side=RIGHT
                    ),
                    parallel=SideOfEquation(
                        side=RIGHT
                    ),
                    context=ParseContext(
                        from=4,
                        to=8,
                        text=[the,
                        right,
                        hand,
                        side]
                    )
                ),
                q2=ParsedQuantity(
                    quantity=HangingAmount(
                        unit=kotlin.Unit
                    ),
                    parallel=HangingAmount(
                        unit=kotlin.Unit
                    ),
                    context=ParseContext(
                        from=9,
                        to=12,
                        text=[the,
                        desired,
                        quantity]
                    )
                )
            ),
            parallel=Equals(
                q1=SideOfEquation(
                    side=RIGHT
                ),
                q2=HangingAmount(
                    unit=kotlin.Unit
                )
            ),
            context=ParseContext(
                from=4,
                to=12,
                text=[the,
                right,
                hand,
                side,
                counts,
                the,
                desired,
                quantity]
            )
        )
    ),
    parallel=By(
        concept=MULTIPLICATION_PRINCIPLE,
        conclusion=Equals(
            q1=SideOfEquation(
                side=RIGHT
            ),
            q2=HangingAmount(
                unit=kotlin.Unit
            )
        )
    ),
    context=ParseContext(
        from=0,
        to=12,
        text=[by,
        the,
        multiplication,
        principle,
        the,
        right,
        hand,
        side,
        counts,
        the,
        desired,
        quantity]
    )
)

